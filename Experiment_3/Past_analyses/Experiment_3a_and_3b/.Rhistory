segments( c(50,60), c(0,0), c(50,60), y[ c(1,length(y)) ] )
f = function( a, b ) {
sel = Speed >= a & Speed <= b
x = Speed[sel]; y = Time_to_dest[sel]
h1 = y[1]; h2 = y[ length(y) ]
points( c(a,b), c(h1,h2), pch = 19 )
segments( c( a ), c( h1 ), c( a ), c( h2 ) )
}
f(50,60)
plot( Speed, Time_to_dest, xlab = 'Speed (km/h)',
ylab = 'Time to destination (h)', bty = 'l', type = 'l' )
f = function( a, b ) {
sel = Speed >= a & Speed <= b
x = Speed[sel]; y = Time_to_dest[sel]
h1 = y[1]; h2 = y[ length(y) ]
points( c(a,b), c(h1,h2), pch = 19 )
segments( c( a ), c( h1 ), c( a ), c( h2 ) )
}
f(50,60)
plot( Speed, Time_to_dest, xlab = 'Speed (km/h)',
ylab = 'Time to destination (h)', bty = 'l', type = 'l' )
f = function( a, b ) {
sel = Speed >= a & Speed <= b
x = Speed[sel]; y = Time_to_dest[sel]
h1 = y[1]; h2 = y[ length(y) ]
points( c(a,b), c(h1,h2), pch = 19 )
segments( c( a, a ), c( h1, h2 ), c( a, b ), c( h2, h2 ) )
}
f(50,60)
f(60,70)
Speed = seq( 40, 80, length = 100 )
Dist = 100
Time_to_dest = Dist / Speed
plot( Speed, Time_to_dest, xlab = 'Speed (km/h)',
ylab = 'Time to destination (h)', bty = 'l', type = 'l' )
f = function( a, b ) {
sel = Speed >= a & Speed <= b
x = Speed[sel]; y = Time_to_dest[sel]
h1 = y[1]; h2 = y[ length(y) ]
points( c(a,b), c(h1,h2), pch = 19 )
segments( c( a, a ), c( h1, h2 ), c( a, b ), c( h2, h2 ) )
}
f(60,70)
f(50,60)
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
head( pd )
sel = allData$BlockType == 0
pd = allData[ sel, ] # Practice data
head(pd)
head( allData )
s
sel = allData$BlockType == 1
s = allData[ sel, ] # Staircase trials
head(s)
nrow(s)
80*N
trial_int = rep( 1:8, each = 10 )
trial_int = rep( trial_int, N )
aggregate( s$Accuracy, list( trial_int, s$Subject ), mean )
ac = aggregate( s$Accuracy, list( trial_int, s$Subject ), mean )
tc = aggregate( s$TargetContrast, list( trial_int, s$Subject ), unique )
x11()
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sel = ac$s == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n' )
ac$s == s
ac$S == s
ac
colnames( ac ) = c('TI','S','P')
colnames( tc ) = c('TI','S','TC')
sel = ac$S == s
lines( 1:8, ac$P[sel] )
ac$P[sel]
head(ac)
sel
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n' )
lines( 1:8, ac$P[sel] )
ac$S
ac$S == s
ac = aggregate( sa$Accuracy, list( trial_int, sa$Subject ), mean )
tc = aggregate( sa$TargetContrast, list( trial_int, sa$Subject ), unique )
colnames( ac ) = c('TI','S','P')
colnames( tc ) = c('TI','S','TC')
sel = allData$BlockType == 1
sa = allData[ sel, ] # Staircase trials
ac = aggregate( sa$Accuracy, list( trial_int, sa$Subject ), mean )
tc = aggregate( sa$TargetContrast, list( trial_int, sa$Subject ), unique )
colnames( ac ) = c('TI','S','P')
colnames( tc ) = c('TI','S','TC')
s = 1
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n' )
lines( 1:8, ac$P[sel] )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(2,c(0,.5,1))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,1) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(2,c(0,.5,1))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
}
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,1) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
}
tc$TC[ sel ]
x11()
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,1) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
axis(4,c(.02,.07,.12))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(.02,.12), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
}
lowerUpper( .05, tc$TC )
x11()
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,1) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
axis(4,c(0,.2,.4))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
}
x11()
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,2) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(4,c(0,.2,.4))
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
}
qbinom( c(.25,.75), 10, .75 )
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,2) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
polygon( c(1, 8, 8, 1 ), c(.7,.8,.7,.8),
col = 'grey', border = NA )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(4,c(0,.2,.4))
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
}
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,2) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
polygon( c(1, 8, 8, 1 ), c(.8,.8,.7,.7),
col = 'grey', border = NA )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(4,c(0,.2,.4))
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
}
which( ac$P[ sel ] < .75 )
min( which( ac$P[ sel ] < .75 ) )
st = min( which( ac$P[ sel ] < .75 ) )
tc$TC[ st:8 ]
mean( tc$TC[ st:8 ] )
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,2) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
polygon( c(1, 8, 8, 1 ), c(.8,.8,.7,.7),
col = 'grey', border = NA )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(4,c(0,.2,.4))
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
st = min( which( ac$P[ sel ] < .75 ) )
perf_thresh[s] = mean( tc$TC[ st:8 ] )
abline( h = perf_thresh[s], col = 'blue', lty = 2 )
}
perf_thresh = numeric( N )
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,2) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
polygon( c(1, 8, 8, 1 ), c(.8,.8,.7,.7),
col = 'grey', border = NA )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(4,c(0,.2,.4))
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
st = min( which( ac$P[ sel ] < .75 ) )
perf_thresh[s] = mean( tc$TC[ st:8 ] )
abline( h = perf_thresh[s], col = 'blue', lty = 2 )
}
s
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,2) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
polygon( c(1, 8, 8, 1 ), c(.8,.8,.7,.7),
col = 'grey', border = NA )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(4,c(0,.2,.4))
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
st = min( which( ac$P[ sel ] < .75 ) )
perf_thresh[s] = mean( tc$TC[ sel ][ st:8 ] )
abline( h = perf_thresh[s], col = 'blue', lty = 2 )
}
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,2) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
polygon( c(1, 8, 8, 1 ), c(.8,.8,.7,.7),
col = 'grey', border = NA )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(4,c(0,.2,.4))
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
st = min( which( ac$P[ sel ] < .75 ) )
perf_thresh[s] = mean( tc$TC[ sel ][ st:8 ] )
abline( h = perf_thresh[s], col = 'blue', lty = 2 )
legend( 'bottomleft', paste('Subject',s), bty = 'n' )
}
blankPlot()
legend('topleft',c('Moving average','Target contrast'),
fill=c('black','blue'),
bty='n')
blankPlot()
legend('topleft','Calibration data',bty='n',cex=1.5)
if (!savePlot) x11()
tmp = matrix( 1:20, 4, 5, byrow = T )
tmp[4,3] = N+1; tmp[4,4:5] = N+2
layout( tmp )
sbj = unique( ac$S )
for (s in sbj) {
par( mar = c(3,3,1,2) )
sel = ac$S == s
plot( c(1,8), c(0,1), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
polygon( c(1, 8, 8, 1 ), c(.8,.8,.7,.7),
col = 'grey', border = NA )
axis(2,c(0,.5,1))
axis(1,1:8,seq(10,80,10))
lines( 1:8, ac$P[sel] )
abline( h = .75, lty = 2 )
par(new=TRUE)
plot( c(1,8), c(0,.4), type = 'n', xlab = ' ', ylab = ' ',
xaxt = 'n', yaxt = 'n' )
axis(4,c(0,.2,.4))
lines( 1:8, tc$TC[sel], col = 'blue' )
par(new=FALSE)
st = min( which( ac$P[ sel ] < .75 ) )
perf_thresh[s] = mean( tc$TC[ sel ][ st:8 ] )
abline( h = perf_thresh[s], col = 'blue', lty = 2 )
legend( 'bottomleft', paste('Subject',s), bty = 'n' )
}
blankPlot()
legend('topleft',c('Moving\naverage','Target\ncontrast'),
fill=c('black','blue'),
bty='n')
blankPlot()
legend('topleft','Calibration data',bty='n',cex=1.5)
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
dev.off()
dev.off()
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
x
log( x )
seq(-3,-2,.25)
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
x
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
kappa = c(1,2,3)
sapply( kappa, function(x) min( x, .75 ) )
g_theta = function( theta, alpha, beta, kappa ) {
# Purpose:
# Calculates the log target contrast for a piecewise logistic function.
# Arguments:
# theta - The desired level of performance
# alpha - The slope parameter
# beta  - The criterion (value of x for 50% performance)
# kappa - The upper asymptote
# Returns:
# The log of the target contrast to produced the desired level
# of performance.
new_theta = sapply( kappa, function(x) min( x, theta ) )
x = -log( ( kappa - new_theta )/new_theta )/alpha + beta
return( x )
}
tmp = g_theta( .75, post$alpha[,1], post$beta[,1], post$kappa[,1] )
x
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
x11()
plot( c(.5,N+.5), c(-3,-2), type = 'n', xlab = 'Subjects',
ylab = 'Log contrast for 75% performance',
xaxt = 'n', bty = 'l' )
for (s in 1:N) {
x_crit = g_theta( .75, post$alpha[,1], post$beta[,1], post$kappa[,1] )
violinPlot( x_crit, s, scaleH = .4, col = 'grey' )
points( s, log( perf_thresh[s] ), col = 'blue', pch = 19 )
}
summary( x_crit )
summary( post$kappa )
plot( c(.5,N+.5), c(-3,-2), type = 'n', xlab = 'Subjects',
ylab = 'Log contrast for 75% performance',
xaxt = 'n', bty = 'l' )
for (s in 1:N) {
x_crit = g_theta( .75, post$alpha[,s], post$beta[,s], post$kappa[,s] )
x_crit = x_crit[ x_crit != Inf ]
violinPlot( x_crit, s, scaleH = .4, col = 'grey' )
points( s, log( perf_thresh[s] ), col = 'blue', pch = 19 )
}
g_theta( .75, 8, 2.9, .8 )
summary( x_crit )
s
str( post$alpha )
plot( c(.5,N+.5), c(-3,-2), type = 'n', xlab = 'Subjects',
ylab = 'Log contrast for 75% performance',
xaxt = 'n', bty = 'l' )
for (s in 1:N) {
x_crit = g_theta( .75, post$alpha[,s], post$beta[,s], post$kappa[,s] )
x_crit = x_crit[ x_crit != Inf ]
violinPlot( x_crit, s, scaleH = .4, col = 'grey' )
points( s, log( perf_thresh[s] ), col = 'blue', pch = 19 )
}
mean( x_crit )
g_theta( .75, 8, 2.9, 1 )
f_theta( -2.7, 8, 2.9, 1 )
f_theta( -2.8, 8, 2.9, 1 )
f_theta( -2.75, 8, 2.9, 1 )
g_theta = function( theta, alpha, beta, kappa ) {
# Purpose:
# Calculates the log target contrast for a piecewise logistic function.
# Arguments:
# theta - The desired level of performance
# alpha - The slope parameter
# beta  - The criterion (value of x for 50% performance)
# kappa - The upper asymptote
# Returns:
# The log of the target contrast to produced the desired level
# of performance.
new_theta = sapply( kappa, function(x) min( x, theta ) )
x = -log( kappa/new_theta - 1 )/alpha - beta
return( x )
}
plot( c(.5,N+.5), c(-3,-2), type = 'n', xlab = 'Subjects',
ylab = 'Log contrast for 75% performance',
xaxt = 'n', bty = 'l' )
for (s in 1:N) {
x_crit = g_theta( .75, post$alpha[,s], post$beta[,s], post$kappa[,s] )
x_crit = x_crit[ x_crit != Inf ]
violinPlot( x_crit, s, scaleH = .4, col = 'grey' )
points( s, log( perf_thresh[s] ), col = 'blue', pch = 19 )
}
plot( c(.5,N+.5), c(-3,-1), type = 'n', xlab = 'Subjects',
ylab = 'Log contrast for 75% performance',
xaxt = 'n', bty = 'l' )
for (s in 1:N) {
x_crit = g_theta( .75, post$alpha[,s], post$beta[,s], post$kappa[,s] )
x_crit = x_crit[ x_crit != Inf ]
violinPlot( x_crit, s, scaleH = .4, col = 'grey' )
points( s, log( perf_thresh[s] ), col = 'blue', pch = 19 )
}
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
3000*4
12000/2000
?stan
6*2000
12000/6
12000/4
12000/2
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
setwd("C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses")
source('C:/Users/Kevin/Desktop/Gabor_priming_variants_2016/Analyses/Psychophysics_analyses.R', echo=TRUE)
