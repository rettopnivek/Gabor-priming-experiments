ya = est['power',]
lines( xa, ya, lwd = 2 )
n = 29 + 9
es_over_se = seq( .1, 10, length = 100 )
est = sapply( es_over_se, function(x) retrodesign( 1, x, df = n ) )
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
x = rev( 1 / c( .1, .2, .5, .75, 1, 2, 5, 10 ) )
axis( 1, log( x ), x,
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
xa = log( es_over_se )
ya = est['power',]
lines( xa, ya, lwd = 2 )
1/.2
n = 29 + 9
es_over_se = seq( .1, 10, length = 100 )
est = sapply( es_over_se, function(x) retrodesign( 1, x, df = n ) )
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
x = rev( 1 / c( .1, .2, .5, .75, 1, 2, 5, 10 ) )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
xa = log( es_over_se )
ya = est['power',]
lines( xa, ya, lwd = 2 )
n = 29 + 9
es_over_se = seq( .1, 10, length = 100 )
est = sapply( es_over_se, function(x) retrodesign( 1, x, df = n ) )
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
xa = log( es_over_se )
ya = est['power',]
lines( xa, ya, lwd = 2 )
n = 29 + 9
es_over_se = seq( .1, 10, length = 100 )
est = sapply( es_over_se, function(x) retrodesign( 1, x, df = n ) )
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( x, yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
xa = log( es_over_se )
ya = est['power',]
lines( xa, ya, lwd = 2 )
n = 29 + 9
es_over_se = seq( .1, 10, length = 100 )
est = sapply( es_over_se, function(x) retrodesign( 1, x, df = n ) )
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
xa = log( es_over_se )
ya = est['power',]
lines( xa, ya, lwd = 2 )
n = 29 + 9
es_over_se = seq( .1, 10, length = 200 )
est = sapply( es_over_se, function(x) retrodesign( 1, x, df = n ) )
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
xa = log( es_over_se )
ya = est['power',]
lines( xa, ya, lwd = 2 )
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
# Ratio of effect size over variability
es_over_se = seq( .1, 10, length = 200 )
# Three examples
est = list(
est_10 = sapply( es_over_se, function(x)
retrodesign( 1, x, df = 10 - 2 ) )
est_40 = sapply( es_over_se, function(x)
retrodesign( 1, x, df = 40 - 2 ) )
est_100 = sapply( es_over_se, function(x)
retrodesign( 1, x, df = 100 - 2 ) )
)
clr = c( 'red', 'black', 'blue' )
xa = log( es_over_se )
for ( i in 1:3 ) {
ya = est[[i]]['power',]
lines( xa, ya, lwd = 2, col = clr[i] )
}
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
# Ratio of effect size over variability
es_over_se = seq( .1, 10, length = 200 )
# Three examples
est = list(
est_10 = sapply( es_over_se, function(x)
retrodesign( 1, x, df = 10 - 2 ) ),
est_40 = sapply( es_over_se, function(x)
retrodesign( 1, x, df = 40 - 2 ) ),
est_100 = sapply( es_over_se, function(x)
retrodesign( 1, x, df = 100 - 2 ) )
)
clr = c( 'red', 'black', 'blue' )
xa = log( es_over_se )
for ( i in 1:3 ) {
ya = est[[i]]['power',]
lines( xa, ya, lwd = 2, col = clr[i] )
}
# Ratio of effect size over variability
es_over_se = seq( .1, 10, length = 200 )
# Compute power, type S errors, and exaggeration ratio
est = sapply( es_over_se, function(x)
retrodesign( 1, x ) )
xa = log( es_over_se )
# 3 panels (Power, type S, type M)
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
### Power
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
ya = est['power',]
lines( xa, ya, lwd = 2 )
### Type S
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
ya = est['typeS',]
lines( xa, ya, lwd = 2 )
range( est['exaggeration',
] )
# 3 panels (Power, type S, type M)
x11( width = 12 )
layout( cbind( 1, 2, 3 ) )
### Power
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 1 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,1,.1),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
horizLines( .9, xl, lty = 2, lwd = 2 )
ya = est['power',]
lines( xa, ya, lwd = 2 )
### Type S
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, .5 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,.5,.05),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
ya = est['typeS',]
lines( xa, ya, lwd = 2 )
### Exaggeration ratio
# Create a blank plot
xl = c( -3, 3 )
yl = c( 0, 25 )
blankPlot( xl, yl )
# Add labels and axes
x = rev( 1 / c( .1, .2, .5, 1, 2, 5, 10 ) )
vertLines( log( x ), yl, col = 'grey80', lwd = 2 )
customAxes( xl, yl, label = c( 'Effect size / Variability',
'Power' ) )
axis( 2, seq(0,25,5),
tick = F, line = -1.5, cex.axis = 1.25 )
axis( 1, log( x ), c( '10/1', '5/1', '2/1', '1/1',
'1/2', '1/5', '1/10' ),
tick = F, line = -1.5, cex.axis = 1.25 )
ya = est['exaggeration',]
lines( xa, ya, lwd = 2 )
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
log(1)
Ns = 50
Nv = 8
Nrep = 10000
sigma = 1
# Initialize data structures
X = matrix( NA, Ns, Nv )
colnames( X ) = paste( 'X', 1:Nv )
dtbf = data.frame(
Subject = 1:Ns,
y = NA
)
dtbf = cbind( dtbf, X )
frm = paste( 'y ~ 1 +',
paste( colnames(X), collapse = ' + ' ) )
frm
Ns = 50
Nv = 8
Nrep = 10000
sigma = 1
# Initialize data structures
X = matrix( NA, Ns, Nv )
colnames( X ) = paste( 'X', 1:Nv, sep = '' )
dtbf = data.frame(
Subject = 1:Ns,
y = NA
)
dtbf = cbind( dtbf, X )
frm = paste( 'y ~ 1 +',
paste( colnames(X), collapse = ' + ' ) )
frm
Ns = 50
Nv = 8
Nrep = 10000
sigma = 1
# Initialize data structures
X = matrix( NA, Ns, Nv )
cn = paste( 'X', 1:Nv, sep = '' )
colnames( X ) = cn
dtbf = data.frame(
Subject = 1:Ns,
y = NA
)
dtbf = cbind( dtbf, X )
frm = paste( 'y ~ 1 +',
paste( cn, collapse = ' + ' ) )
frm = as.formula( frm )
# Null model
dtbf[,grep('X',cn)] = matrix( rnorm(Ns*Nv), Ns, Nv )
dtbf$y = rnorm(Ns)
# Linear model
lmf = lm( frm, data = dtbf )
head( dtbf )
Nv
Ns
length( X )
Nv * Ns
Ns
Nv
grep('X',cn)
Ns = 50
Nv = 8
Nrep = 10000
sigma = 1
# Initialize data structures
X = matrix( NA, Ns, Nv )
cn = paste( 'X', 1:Nv, sep = '' )
colnames( X ) = cn
dtbf = data.frame(
Subject = 1:Ns,
y = NA
)
dtbf = cbind( dtbf, X )
frm = paste( 'y ~ 1 +',
paste( cn, collapse = ' + ' ) )
frm = as.formula( frm )
# Null model
dtbf[,grep('X',cn)+2] = matrix( rnorm(Ns*Nv), Ns, Nv )
dtbf$y = rnorm(Ns)
# Linear model
lmf = lm( frm, data = dtbf )
summary( lmf )
sm = summary( lmf )$coefficients
sm[-1,4]
Ns = 50
Nv = 8
Nrep = 10000
sigma = 1
# Initialize data structures
X = matrix( NA, Ns, Nv )
cn = paste( 'X', 1:Nv, sep = '' )
colnames( X ) = cn
dtbf = data.frame(
Subject = 1:Ns,
y = NA
)
dtbf = cbind( dtbf, X )
frm = paste( 'y ~ 1 +',
paste( cn, collapse = ' + ' ) )
frm = as.formula( frm )
out = numeric(Nrep)
for ( nr in 1:Nrep ) {
# Null model
dtbf[,grep('X',cn)+2] = matrix( rnorm(Ns*Nv), Ns, Nv )
dtbf$y = rnorm(Ns)
# Linear model
lmf = lm( frm, data = dtbf )
sm = summary( lmf )$coefficients
out[nr] = sum( sm[-1,4] < .05 )
}
sum( out )/Nrep
sum( out )/Nrep/Nv
citation()
citation('brms')
install.packages( 'projpred' )
binclass::bc_simulate
x = .342
str( x )
1+1
600/1000
.6*60
84/1000 * 60
50/1000 * 60
400/1000 * 60
600 + 50 + 84
1500 - 600 + 50 + 84
1500 - 600 + 50 + 84 - 500
1500 - 600 + 400 + 84 - 500
1500 - 600 - 50 - 84 - 500
1500 - 600 - 400 - 84 - 500
1500 - 600 - 400 - 84
1500 - 600 - 50 - 84
1500 - 600 - 50 - 84
1500 - 600 - 400 - 84
8*7
8*9
9*20
2*3*2*30a
2*3*2*30
2*3*2*30/6
1000/60
400/(1000/60)
100/(1000/60)
4 * 10 * 2
30*2*3*2
360/60
10 * 9 * 2
10 * 9 * 2 * 2
1000/120
34/(1000/120)
124/(1000/120)
800 - 400 - 84 - 0
316/(1000/120)
400 - c( 8, 34, 134 )
8*6
(1000/60)
68/(1000/60)
500 - 68
2 * 2 * 20
2 * 2 * 9
2 * 2 * 10 * 9
1500 - 84 - 600 - 1000
1500 - 84 - 600 - 100
1500 - 84 - 600 - 50
1000/(1000/60)
100/(1000/60)
setwd("E:/Gabor_priming_2015_postdoc/Summary")
dir()
setwd( '..' )
dir()
setwd( dir()[6] )
getwd()P
getwd()
dir()
setwd( dir()[3] )
dir()
setwd( dir()[1] )
dir()
tst = read.csv( file = 'Subject_2.csv', header = T, stringsAsFactors = F )
head( tst )
table( tst$BlockType )
tst$Accuracy[ tst$BlockType == 0 ]
cumSum( tst$Accuracy[ tst$BlockType == 0 ] )
cumsum( tst$Accuracy[ tst$BlockType == 0 ] )
tst = read.csv( file = 'Subject_3.csv', header = T, stringsAsFactors = F )
tst = read.csv( file = 'Subject_4.csv', header = T, stringsAsFactors = F )
tst$Accuracy[ tst$BlockType == 0 ]
table( tst$BlockType )
sel = tst$BlockType == 0
tst$TargetContrast[se]/tst$FoilContrast[sel]
tst$TargetContrast[sel]/tst$FoilContrast[sel]
table( tst$TargetContrast[sel]/tst$FoilContrast[sel] )
setwd(
'..' )
dir()
setwd( dir()[2] )
dir()
tst = read.csv( file = 'Subject_5.csv', header = T, stringsAsFactors = F )
table( tst$BlockType )
tst = read.csv( file = 'Subject_4.csv', header = T, stringsAsFactors = F )
table( tst$BlockType )
tst = read.csv( file = 'Subject_3.csv', header = T, stringsAsFactors = F )
table( tst$BlockType )
